<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.jw.dao.electiveCourse.IElectiveClassesDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('electiveId')">
                             T.elective_id,
                         </if>
                         <if test="!pager.excludes.contains('classesId')">
                             T.classes_id,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                         <if test="!pager.excludes.contains('schoolId')">
                             T.school_id,
                         </if>
                         <if test="!pager.excludes.contains('gradeId')">
                             T.grade_id,
                         </if>
                         <if test="!pager.excludes.contains('gradeName')">
                             T.grade_name,
                         </if>
                         <if test="!pager.excludes.contains('classesName')">
                             T.classes_name,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='id'">
                             T.id like concat('%',#{id},'%')
                         </when>
                         <otherwise>
                             T.id=#{id}
                         </otherwise>
                      </choose>
              </if>
              <if test="electiveId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='electiveId'">
                            and T.elective_id like concat('%',#{electiveId},'%')
                         </when>
                         <otherwise>
                            and T.elective_id=#{electiveId}
                         </otherwise>
                      </choose>
              </if>
              <if test="classesId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='classesId'">
                            and T.classes_id like concat('%',#{classesId},'%')
                         </when>
                         <otherwise>
                            and T.classes_id=#{classesId}
                         </otherwise>
                      </choose>
              </if>
              <if test="createTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='createTime'">
                            and T.create_time like concat('%',#{createTime},'%')
                         </when>
                         <otherwise>
                            and T.create_time=#{createTime}
                         </otherwise>
                      </choose>
              </if>
              <if test="schoolId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='schoolId'">
                            and T.school_id like concat('%',#{schoolId},'%')
                         </when>
                         <otherwise>
                            and T.school_id=#{schoolId}
                         </otherwise>
                      </choose>
              </if>
              <if test="gradeId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='gradeId'">
                            and T.grade_id like concat('%',#{gradeId},'%')
                         </when>
                         <otherwise>
                            and T.grade_id=#{gradeId}
                         </otherwise>
                      </choose>
              </if>
              <if test="gradeName!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='gradeName'">
                            and T.grade_name like concat('%',#{gradeName},'%')
                         </when>
                         <otherwise>
                            and T.grade_name=#{gradeName}
                         </otherwise>
                      </choose>
              </if>
              <if test="classesName!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='classesName'">
                            and T.classes_name like concat('%',#{classesName},'%')
                         </when>
                         <otherwise>
                            and T.classes_name=#{classesName}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findElectiveClassesListByCondition" parameterType="ElectiveClasses" resultType="ElectiveClasses">
        select
         <include refid="projection"/>
         from jw_elective_classes T
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>


    </select>
    <select id="findElectiveClassesCountByCondition" parameterType="ElectiveClasses" resultType="long">
        select count(*) from jw_elective_classes T
        <include refid="match"/>
    </select>
    <select id="findElectiveClassesById" resultType="ElectiveClasses">
        select * from jw_elective_classes where =#{id}
    </select>
    <select id="findOneElectiveClassesByCondition" parameterType="ElectiveClasses" resultType="ElectiveClasses">
        select
         <include refid="projection"/>
         from jw_elective_classes T
        <include refid="match"/>
    </select>
    <insert id="saveElectiveClasses" parameterType="ElectiveClasses">
        insert into jw_elective_classes
         (
            id,
            elective_id,
            classes_id,
            create_time,
            school_id,
            grade_id,
            grade_name,
            classes_name,
            school_year_id
        ) values
         (
                #{id}
                ,
                #{electiveId}
                ,
                #{classesId}
                ,
                now()
                ,
                #{schoolId}
                ,
                #{gradeId}
                ,
                #{gradeName}
                ,
                #{classesName}
                ,#{schoolYearId}
         )
    </insert>
    <update id="updateElectiveClasses" parameterType="ElectiveClasses">
        update jw_elective_classes
        <set>
          </set>
         where =#{}
    </update>
    <delete id="deleteElectiveClasses" >
        delete from jw_elective_classes where =#{id}
    </delete>
    <delete id="deleteElectiveClassesByCondition" >
        delete T from jw_elective_classes T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveElectiveClasses" parameterType="ElectiveClasses">
        INSERT INTO jw_elective_classes (  id,  elective_id,  classes_id,  create_time,  school_id,  grade_id,  grade_name,  classes_name,school_year_id)
        VALUES
        <foreach collection="list" item="electiveClasses" separator=",">
            (  #{electiveClasses.id},  #{electiveClasses.electiveId},  #{electiveClasses.classesId},  now(),  #{electiveClasses.schoolId},  #{electiveClasses.gradeId},  #{electiveClasses.gradeName},  #{electiveClasses.classesName},#{electiveClasses.schoolYearId}  )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
</mapper>