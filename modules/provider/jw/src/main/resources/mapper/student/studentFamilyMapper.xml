<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.jw.dao.student.IStudentFamilyDao">
    <!--########################################################################################################################-->
    <select id="findStudentFamilyListByCondition" parameterType="StudentFamily" resultType="StudentFamily">
        select
         <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('studentId')">
                             T.student_id,
                         </if>
                         <if test="!pager.excludes.contains('name')">
                             T.name,
                         </if>
                         <if test="!pager.excludes.contains('age')">
                             T.age,
                         </if>
                         <if test="!pager.excludes.contains('relation')">
                             T.relation,
                         </if>
                         <if test="!pager.excludes.contains('workingUnit')">
                             T.working_unit,
                         </if>
                         <if test="!pager.excludes.contains('contactWay')">
                             T.contact_way,
                         </if>
                         <if test="!pager.excludes.contains('job')">
                             T.job,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                         <if test="!pager.excludes.contains('updateTime')">
                             T.update_time,
                         </if>
                         <if test="!pager.excludes.contains('del')">
                             T.del,
                         </if>
                         <if test="!pager.excludes.contains('schoolId')">
                             T.school_id,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
         from jw_student_family T
        <where>
              <if test="studentId!=null">
                 T.student_id=#{studentId}
              </if>
              <if test="name!=null">
                and T.name=#{name}
              </if>
              <if test="age!=null">
                and T.age=#{age}
              </if>
              <if test="relation!=null">
                and T.relation=#{relation}
              </if>
              <if test="workingUnit!=null">
                and T.working_unit=#{workingUnit}
              </if>
              <if test="contactWay!=null">
                and T.contact_way=#{contactWay}
              </if>
              <if test="job!=null">
                and T.job=#{job}
              </if>
              <if test="createTime!=null">
                and T.create_time=#{createTime}
              </if>
              <if test="updateTime!=null">
                and T.update_time=#{updateTime}
              </if>
              <if test="del!=null">
                and T.del=#{del}
              </if>
              <if test="schoolId!=null">
                and T.school_id=#{schoolId}
              </if>

        </where>
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.sortField)} ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.sortOrder)}
        </if>
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </select>
    <select id="findStudentFamilyCountByCondition" parameterType="StudentFamily" resultType="long">
        select count(*) from jw_student_family
        <where>
              <if test="studentId!=null">
                 student_id=#{studentId}
              </if>
              <if test="name!=null">
                and name=#{name}
              </if>
              <if test="age!=null">
                and age=#{age}
              </if>
              <if test="relation!=null">
                and relation=#{relation}
              </if>
              <if test="workingUnit!=null">
                and working_unit=#{workingUnit}
              </if>
              <if test="contactWay!=null">
                and contact_way=#{contactWay}
              </if>
              <if test="job!=null">
                and job=#{job}
              </if>
              <if test="createTime!=null">
                and create_time=#{createTime}
              </if>
              <if test="updateTime!=null">
                and update_time=#{updateTime}
              </if>
              <if test="del!=null">
                and del=#{del}
              </if>
              <if test="schoolId!=null">
                and school_id=#{schoolId}
              </if>
        </where>
    </select>
    <select id="findStudentFamilyById" resultType="StudentFamily">
        select * from jw_student_family where student_id=#{arg0}
    </select>
    <insert id="saveStudentFamily" parameterType="StudentFamily" useGeneratedKeys="true" keyProperty="id">
        insert into jw_student_family
         (
            id,
            student_id,
            name,
            age,
            relation,
            working_unit,
            contact_way,
            job,
            create_time,
            update_time,
            del,
            school_id
        ) values
         (
                #{id}
                ,
                #{studentId}
                ,
                #{name}
                ,
                #{age}
                ,
                #{relation}
                ,
                #{workingUnit}
                ,
                #{contactWay}
                ,
                #{job}
                ,
                now()
                ,
                #{updateTime}
                ,
                #{del}
                ,
                #{schoolId}
                
         )
    </insert>
    <update id="updateStudentFamily" parameterType="StudentFamily">
        update jw_student_family
        <set>
                    <if test="studentId!=null ">
                        student_id=#{studentId},
                    </if>
                    <if test="name!=null ">
                        name=#{name},
                    </if>
                    <if test="age!=null ">
                        age=#{age},
                    </if>
                    <if test="relation!=null ">
                        relation=#{relation},
                    </if>
                    <if test="workingUnit!=null ">
                        working_unit=#{workingUnit},
                    </if>
                    <if test="contactWay!=null ">
                        contact_way=#{contactWay},
                    </if>
                    <if test="job!=null ">
                        job=#{job},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime},
                    </if>
                    update_time=now(),
                    <if test="del!=null ">
                        del=#{del},
                    </if>
                    <if test="schoolId!=null ">
                        school_id=#{schoolId}
                    </if>
          </set>
         where id=#{id}
    </update>
    <delete id="deleteStudentFamily" >
        delete from jw_student_family where student_id=#{arg0}
    </delete>
    <delete id="deleteStudentFamilyByCondition" >
        delete from jw_student_family
        <where>
              <if test="id!=null">
                 id=#{id}
              </if>
              <if test="studentId!=null">
                and student_id=#{studentId}
              </if>
              <if test="name!=null">
                and name=#{name}
              </if>
              <if test="age!=null">
                and age=#{age}
              </if>
              <if test="relation!=null">
                and relation=#{relation}
              </if>
              <if test="workingUnit!=null">
                and working_unit=#{workingUnit}
              </if>
              <if test="contactWay!=null">
                and contact_way=#{contactWay}
              </if>
              <if test="job!=null">
                and job=#{job}
              </if>
              <if test="createTime!=null">
                and create_time=#{createTime}
              </if>
              <if test="updateTime!=null">
                and update_time=#{updateTime}
              </if>
              <if test="del!=null">
                and del=#{del}
              </if>
              <if test="schoolId!=null">
                and school_id=#{schoolId}
              </if>
        </where>
    </delete>
    <insert id="batchSaveStudentFamily" parameterType="StudentFamily" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO jw_student_family (  id,  student_id,  name,  age,  relation,  working_unit,  contact_way,  job,  create_time,  update_time,  del,  school_id )
        VALUES
        <foreach collection="list" item="studentFamily" separator=",">
            (  #{studentFamily.id},  #{studentFamily.studentId},  #{studentFamily.name},  #{studentFamily.age},  #{studentFamily.relation},  #{studentFamily.workingUnit},  #{studentFamily.contactWay},  #{studentFamily.job},  #{studentFamily.createTime},  #{studentFamily.updateTime},  #{studentFamily.del},  #{studentFamily.schoolId}  )
        </foreach>
    </insert>
    <!--########################################################################################################################-->
</mapper>