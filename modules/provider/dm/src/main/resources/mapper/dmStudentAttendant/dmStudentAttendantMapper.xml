<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.dm.dao.dmStudentAttendant.IDmStudentAttendantDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('schoolId')">
                             T.school_id,
                         </if>
                         <if test="!pager.excludes.contains('teacherId')">
                             T.teacher_id,
                         </if>
                         <if test="!pager.excludes.contains('classId')">
                             T.class_id,
                         </if>
                         <if test="!pager.excludes.contains('classCardId')">
                             T.class_card_id,
                         </if>
                         <if test="!pager.excludes.contains('ddId')">
                             T.dd_id,
                         </if>
                         <if test="!pager.excludes.contains('studentIds')">
                             T.student_ids,
                         </if>
                         <if test="!pager.excludes.contains('studentNames')">
                             T.student_names,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                         <if test="!pager.excludes.contains('updateTime')">
                             T.update_time,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*,ad.name AS weekName
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='id'">
                             T.id like concat('%',#{id},'%')
                         </when>
                         <otherwise>
                             T.id=#{id}
                         </otherwise>
                      </choose>
              </if>
              <if test="schoolId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='schoolId'">
                            and T.school_id like concat('%',#{schoolId},'%')
                         </when>
                         <otherwise>
                            and T.school_id=#{schoolId}
                         </otherwise>
                      </choose>
              </if>
              <if test="teacherId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='teacherId'">
                            and T.teacher_id like concat('%',#{teacherId},'%')
                         </when>
                         <otherwise>
                            and T.teacher_id=#{teacherId}
                         </otherwise>
                      </choose>
              </if>
              <if test="classId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='classId'">
                            and T.class_id like concat('%',#{classId},'%')
                         </when>
                         <otherwise>
                            and T.class_id=#{classId}
                         </otherwise>
                      </choose>
              </if>
              <if test="classCardId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='classCardId'">
                            and T.class_card_id like concat('%',#{classCardId},'%')
                         </when>
                         <otherwise>
                            and T.class_card_id=#{classCardId}
                         </otherwise>
                      </choose>
              </if>
              <if test="ddId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='ddId'">
                            and T.dd_id like concat('%',#{ddId},'%')
                         </when>
                         <otherwise>
                            and T.dd_id=#{ddId}
                         </otherwise>
                      </choose>
              </if>
              <if test="weekName!=null">
                    <choose>
                        <when test="pager!=null and pager.like=='weekName'">
                            and ad.name like concat('%',#{weekName},'%')
                        </when>
                        <otherwise>
                            and ad.name=#{weekName}
                        </otherwise>
                    </choose>
                </if>
                <if test="studentIds!=null">
                    <choose>
                        <when test="pager!=null and pager.like!=null and pager.like.contains('studentIds')">
                            and T.student_ids like concat('%',#{studentIds},'%')
                        </when>
                        <otherwise>
                            and T.student_ids=#{studentIds}
                        </otherwise>
                    </choose>
                </if>
                <if test="studentNames!=null">
                    <choose>
                        <when test="pager!=null and pager.like!=null and pager.like.contains('studentNames')">
                            and T.student_names like concat('%',#{studentNames},'%')
                        </when>
                        <otherwise>
                            and T.student_names=#{studentNames}
                        </otherwise>
                    </choose>
                </if>
              <if test="createTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='createTime'">
                            and T.create_time like concat('%',#{createTime},'%')
                         </when>
                         <otherwise>
                            and T.create_time=#{createTime}
                         </otherwise>
                      </choose>
              </if>
              <if test="updateTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='updateTime'">
                            and T.update_time like concat('%',#{updateTime},'%')
                         </when>
                         <otherwise>
                            and T.update_time=#{updateTime}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
            AND ad.type_id='38'
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findDmStudentAttendantListByCondition" parameterType="DmStudentAttendant" resultType="DmStudentAttendant">
        select
         <include refid="projection"/>
         from dm_student_attendant T RIGHT JOIN ad_dd ad on T.dd_id=ad.id
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>


    </select>
    <select id="findDmStudentAttendantCountByCondition" parameterType="DmStudentAttendant" resultType="long">
        select count(*) from dm_student_attendant T RIGHT JOIN ad_dd ad on T.dd_id=ad.id
        <include refid="match"/>
    </select>
    <select id="findDmStudentAttendantById" resultType="DmStudentAttendant">
        select * from dm_student_attendant where id=#{id}
    </select>
    <select id="findOneDmStudentAttendantByCondition" parameterType="DmStudentAttendant" resultType="DmStudentAttendant">
        select
         <include refid="projection"/>
         from dm_student_attendant T LEFT JOIN ad_dd ad on T.dd_id=ad.id
        <include refid="match"/>
    </select>
    <insert id="saveDmStudentAttendant" parameterType="DmStudentAttendant">
        insert into dm_student_attendant
         (
            id,
            school_id,
            teacher_id,
            class_id,
            class_card_id,
            dd_id,
            student_ids,
            student_names,
            create_time,
            update_time
        ) values
         (
                #{id}
                ,
                #{schoolId}
                ,
                #{teacherId}
                ,
                #{classId}
                ,
                #{classCardId}
                ,
                #{ddId}
                ,
                #{studentIds}
                ,
                #{studentNames}
                ,
                now()
                ,
                #{updateTime}
                
         )
    </insert>
    <update id="updateDmStudentAttendant" parameterType="DmStudentAttendant">
        update dm_student_attendant
        <set>
                    school_id=#{schoolId},
                    teacher_id=#{teacherId},
                    class_id=#{classId},
                    class_card_id=#{classCardId},
                    dd_id=#{ddId},
                    student_ids=#{studentIds},
                    student_names=#{studentNames},
                    create_time=#{createTime},
                    update_time=now()
          </set>
         where id=#{id}
    </update>
    <update id="updateDmStudentAttendantForNotNull" parameterType="DmStudentAttendant">
        update dm_student_attendant
        <set>
                    <if test="schoolId!=null ">
                        school_id=#{schoolId},
                    </if>
                    <if test="teacherId!=null ">
                        teacher_id=#{teacherId},
                    </if>
                    <if test="classId!=null ">
                        class_id=#{classId},
                    </if>
                    <if test="classCardId!=null ">
                        class_card_id=#{classCardId},
                    </if>
                    <if test="ddId!=null ">
                        dd_id=#{ddId},
                    </if>
                    <if test="studentIds!=null ">
                        student_ids=#{studentIds},
                    </if>
                    <if test="studentNames!=null ">
                        student_names=#{studentNames},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime},
                    </if>
                    update_time=now()
          </set>
         where id=#{id}
    </update>
    <delete id="deleteDmStudentAttendant" >
        delete from dm_student_attendant where id=#{id}
    </delete>
    <delete id="deleteDmStudentAttendantByCondition" >
        delete T from dm_student_attendant T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveDmStudentAttendant" parameterType="DmStudentAttendant">
        INSERT INTO dm_student_attendant (  id,  school_id,  teacher_id,  class_id,  class_card_id,  dd_id,  student_ids,  student_names,  create_time,  update_time )
        VALUES
        <foreach collection="list" item="dmStudentAttendant" separator=",">
            (   #{dmStudentAttendant.id}  ,   #{dmStudentAttendant.schoolId}  ,   #{dmStudentAttendant.teacherId}  ,   #{dmStudentAttendant.classId}  ,   #{dmStudentAttendant.classCardId}  ,   #{dmStudentAttendant.ddId}  ,   #{dmStudentAttendant.studentIds}  ,   #{dmStudentAttendant.studentNames}  ,   now()  ,   #{dmStudentAttendant.updateTime}    )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
    <delete id="deleteDmStudentAttendantByClassIds"  parameterType="java.util.List">
        delete T from dm_student_attendant T
        WHERE
        T.class_id IN
        <foreach item="item" index="index" collection="clazzIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>