<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.dm.dao.honourRoll.DmHonourRollDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
            <when test="pager!=null and pager.includes!=null">
                <foreach collection="pager.includes" item="field" separator=",">
                    T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                </foreach>
            </when>
            <when test="pager!=null and pager.excludes!=null">
                <trim suffixOverrides=",">
                    <if test="!pager.excludes.contains('id')">
                        T.id,
                    </if>
                    <if test="!pager.excludes.contains('schoolId')">
                        T.school_id,
                    </if>
                    <if test="!pager.excludes.contains('teacherId')">
                        T.teacher_id,
                    </if>
                    <if test="!pager.excludes.contains('classId')">
                        T.class_id,
                    </if>
                    <if test="!pager.excludes.contains('classCardId')">
                        T.class_card_id,
                    </if>
                    <if test="!pager.excludes.contains('type')">
                        T.type,
                    </if>
                    <if test="!pager.excludes.contains('typeName')">
                        T.type_name,
                    </if>
                    <if test="!pager.excludes.contains('honourTime')">
                        T.honour_time,
                    </if>
                    <if test="!pager.excludes.contains('status')">
                        T.status,
                    </if>
                    <if test="!pager.excludes.contains('honourRemark')">
                        T.honour_remark,
                    </if>
                    <if test="!pager.excludes.contains('studentName')">
                        T.student_name,
                    </if>
                    <if test="!pager.excludes.contains('createTime')">
                        T.create_time,
                    </if>
                    <if test="!pager.excludes.contains('updateTime')">
                        T.update_time,
                    </if>
                </trim>
            </when>
            <otherwise>
                T.*
            </otherwise>
        </choose>
    </sql>
    <sql id="match">
        <where>
            <if test="id!=null">
                <choose>
                    <when test="pager!=null and pager.like=='id'">
                        T.id like concat('%',#{id},'%')
                    </when>
                    <otherwise>
                        T.id=#{id}
                    </otherwise>
                </choose>
            </if>
            <if test="schoolId!=null">
                <choose>
                    <when test="pager!=null and pager.like=='schoolId'">
                        and T.school_id like concat('%',#{schoolId},'%')
                    </when>
                    <otherwise>
                        and T.school_id=#{schoolId}
                    </otherwise>
                </choose>
            </if>
            <if test="teacherId!=null">
                <choose>
                    <when test="pager!=null and pager.like=='teacherId'">
                        and T.teacher_id like concat('%',#{teacherId},'%')
                    </when>
                    <otherwise>
                        and T.teacher_id=#{teacherId}
                    </otherwise>
                </choose>
            </if>
            <if test="classId!=null">
                <choose>
                    <when test="pager!=null and pager.like=='classId'">
                        and T.class_id like concat('%',#{classId},'%')
                    </when>
                    <otherwise>
                        and T.class_id=#{classId}
                    </otherwise>
                </choose>
            </if>
            <if test="classCardId!=null">
                <choose>
                    <when test="pager!=null and pager.like=='classCardId'">
                        and T.class_card_id like concat('%',#{classCardId},'%')
                    </when>
                    <otherwise>
                        and T.class_card_id=#{classCardId}
                    </otherwise>
                </choose>
            </if>
            <if test="type!=null">
                <choose>
                    <when test="pager!=null and pager.like=='type'">
                        and T.type like concat('%',#{type},'%')
                    </when>
                    <otherwise>
                        and T.type=#{type}
                    </otherwise>
                </choose>
            </if>
            <if test="typeName!=null">
                <choose>
                    <when test="pager!=null and pager.like=='typeName'">
                        and T.type_name like concat('%',#{typeName},'%')
                    </when>
                    <otherwise>
                        and T.type_name=#{typeName}
                    </otherwise>
                </choose>
            </if>
            <if test="honourTime!=null">
                <choose>
                    <when test="pager!=null and pager.like=='honourTime'">
                        and T.honour_time like concat('%',#{honourTime},'%')
                    </when>
                    <otherwise>
                        and T.honour_time=#{honourTime}
                    </otherwise>
                </choose>
            </if>
            <if test="status!=null">
                and T.status=#{status}
            </if>
            <if test="honourRemark!=null">
                <choose>
                    <when test="pager!=null and pager.like=='honourRemark'">
                        and T.honour_remark like concat('%',#{honourRemark},'%')
                    </when>
                    <otherwise>
                        and T.honour_remark=#{honourRemark}
                    </otherwise>
                </choose>
            </if>
            <if test="studentName!=null">
                <choose>
                    <when test="pager!=null and pager.like=='studentName'">
                        and T.student_name like concat('%',#{studentName},'%')
                    </when>
                    <otherwise>
                        and T.student_name=#{studentName}
                    </otherwise>
                </choose>
            </if>
            <if test="createTime!=null">
                <choose>
                    <when test="pager!=null and pager.like=='createTime'">
                        and T.create_time like concat('%',#{createTime},'%')
                    </when>
                    <otherwise>
                        and T.create_time=#{createTime}
                    </otherwise>
                </choose>
            </if>
            <if test="updateTime!=null">
                <choose>
                    <when test="pager!=null and pager.like=='updateTime'">
                        and T.update_time like concat('%',#{updateTime},'%')
                    </when>
                    <otherwise>
                        and T.update_time=#{updateTime}
                    </otherwise>
                </choose>
            </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findDmHonourRollListByCondition" parameterType="DmHonourRoll" resultType="DmHonourRoll">
        select
        <include refid="projection"/>
        from dm_honour_roll T
        <include refid="match"/>
        <include refid="sort"/>
        <include refid="page"/>


    </select>
    <select id="findDmHonourRollCountByCondition" parameterType="DmHonourRoll" resultType="long">
        select count(*) from dm_honour_roll T
        <include refid="match"/>
    </select>
    <select id="findDmHonourRollById" resultType="DmHonourRoll">
        select * from dm_honour_roll where id=#{id}
    </select>
    <select id="findOneDmHonourRollByCondition" parameterType="DmHonourRoll" resultType="DmHonourRoll">
        select
        <include refid="projection"/>
        from dm_honour_roll T
        <include refid="match"/>
    </select>
    <insert id="saveDmHonourRoll" parameterType="DmHonourRoll">
        insert into dm_honour_roll
        (
        id,
        school_id,
        teacher_id,
        class_id,
        class_card_id,
        type,
        type_name,
        honour_time,
        status,
        honour_remark,
        student_name,
        create_time,
        update_time
        ) values
        (
        #{id}
        ,
        #{schoolId}
        ,
        #{teacherId}
        ,
        #{classId}
        ,
        #{classCardId}
        ,
        #{type}
        ,
        #{typeName}
        ,
        #{honourTime}
        ,
        #{status}
        ,
        #{honourRemark}
        ,
        #{studentName}
        ,
        now()
        ,
        #{updateTime}

        )
    </insert>
    <update id="updateDmHonourRoll" parameterType="DmHonourRoll">
        update dm_honour_roll
        <set>
            <if test="schoolId!=null ">
                school_id=#{schoolId},
            </if>
            <if test="teacherId!=null ">
                teacher_id=#{teacherId},
            </if>
            <if test="classId!=null ">
                class_id=#{classId},
            </if>
            <if test="classCardId!=null ">
                class_card_id=#{classCardId},
            </if>
            <if test="type!=null ">
                type=#{type},
            </if>
            <if test="typeName!=null ">
                type_name=#{typeName},
            </if>
            <if test="honourTime!=null ">
                honour_time=#{honourTime},
            </if>
            <if test="status!=null ">
                status=#{status},
            </if>
            <if test="honourRemark!=null ">
                honour_remark=#{honourRemark},
            </if>
            <if test="studentName!=null ">
                student_name=#{studentName},
            </if>
            <if test="createTime!=null ">
                create_time=#{createTime},
            </if>
            update_time=now()
        </set>
        where id=#{id}
    </update>
    <delete id="deleteDmHonourRoll" >
        delete from dm_honour_roll where id=#{id}
    </delete>
    <delete id="deleteDmHonourRollByCondition" >
        delete T from dm_honour_roll T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveDmHonourRoll" parameterType="DmHonourRoll">
        INSERT INTO dm_honour_roll (  id,  school_id,  teacher_id,  class_id,  class_card_id,  type,  type_name,  honour_time,  status,  honour_remark,  student_name,  create_time,  update_time )
        VALUES
        <foreach collection="list" item="dmHonourRoll" separator=",">
            (  #{dmHonourRoll.id},  #{dmHonourRoll.schoolId},  #{dmHonourRoll.teacherId},  #{dmHonourRoll.classId},  #{dmHonourRoll.classCardId},  #{dmHonourRoll.type},  #{dmHonourRoll.typeName},  #{dmHonourRoll.honourTime},  #{dmHonourRoll.status},  #{dmHonourRoll.honourRemark},  #{dmHonourRoll.studentName},  #{dmHonourRoll.createTime},  #{dmHonourRoll.updateTime}  )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
    <select id="getStudentName" resultType="string">
        select GROUP_CONCAT(name) from jw_student where id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="stopHonourRoll">
        update dm_honour_roll
        <set>
            <if test="status!=null ">
                status=#{status}
            </if>
        </set>
        <where>
            <if test="schoolId!=null ">
                school_id=#{schoolId}
            </if>
            <if test="teacherId!=null ">
                and teacher_id=#{teacherId}
            </if>
            <if test="classId!=null ">
                and class_id=#{classId}
            </if>
            <if test="classCardId!=null ">
                and class_card_id=#{classCardId}
            </if>
            <if test="type!=null ">
                and type=#{type}
            </if>
        </where>
    </update>
    <sql id="matchs">
        <where>
            <if test="id!=null">
                T.id!=#{id}
            </if>
            <if test="schoolId!=null">
                and T.school_id=#{schoolId}
            </if>
            <if test="classId!=null">
                and T.class_id=#{classId}
            </if>
            <if test="type!=null">
               and T.type=#{type}
            </if>
            <if test="honourTime!=null">
                and T.honour_time=#{honourTime}
            </if>
        </where>
    </sql>
    <select id="findDmHonourRoll" parameterType="DmHonourRoll" resultType="long">
        select count(*) from dm_honour_roll T
        <include refid="matchs"/>
    </select>
    <select id="findDmHonourRollByStudentId" resultType="DmHonourRoll">
       select d.*,s.student_id from dm_honour_roll d left join  dm_honour_roll_student s on d.id = s.honour_id  where d.`status` = 1  and s.student_id = #{id} limit 1
    </select>

    <delete id="deleteDmHonourRollByClassId">
        delete from dm_honour_roll where class_id in
        <foreach collection="classIdList" item="classIdList" open="(" separator="," close=")">
            #{classIdList}
        </foreach>
    </delete>
</mapper>