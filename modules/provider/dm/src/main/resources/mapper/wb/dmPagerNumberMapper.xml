<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.dm.dao.wb.LatticePager.IDmPagerNumberDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('name')">
                             T.name,
                         </if>
                         <if test="!pager.excludes.contains('pagerNumber')">
                             T.pager_number,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                         <if test="!pager.excludes.contains('schoolId')">
                             T.school_id,
                         </if>
                         <if test="!pager.excludes.contains('latticeId')">
                             T.lattice_id,
                         </if>
                         <if test="!pager.excludes.contains('modifyTime')">
                             T.modify_time,
                         </if>
                         <if test="!pager.excludes.contains('isRecycle')">
                             T.is_recycle,
                         </if>
                         <if test="!pager.excludes.contains('teacherId')">
                             T.teacher_id,
                         </if>
                         <if test="!pager.excludes.contains('schoolYearId')">
                             T.school_year_id,
                         </if>
                         <if test="!pager.excludes.contains('fromTo')">
                             T.from_to,
                         </if>
                         <if test="!pager.excludes.contains('term')">
                             T.term,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
          <if test="id!=null">
                <choose>
                     <when test="pager!=null and pager.like!=null and pager.like.contains('id')">
                         T.id like concat('%',#{id},'%')
                     </when>
                     <otherwise>
                         T.id=#{id}
                     </otherwise>
                  </choose>
          </if>
          <if test="name!=null">
                <choose>
                     <when test="pager!=null and pager.like!=null and pager.like.contains('name')">
                        and T.name like concat('%',#{name},'%')
                     </when>
                     <otherwise>
                        and T.name=#{name}
                     </otherwise>
                  </choose>
          </if>
          <if test="pagerNumber!=null">
                <choose>
                     <when test="pager!=null and pager.like!=null and pager.like.contains('pagerNumber')">
                        and T.pager_number like concat('%',#{pagerNumber},'%')
                     </when>
                     <otherwise>
                        and T.pager_number=#{pagerNumber}
                     </otherwise>
                  </choose>
          </if>
          <if test="createTime!=null">
                <choose>
                     <when test="pager!=null and pager.like!=null and pager.like.contains('createTime')">
                        and T.create_time like concat('%',#{createTime},'%')
                     </when>
                     <otherwise>
                        and T.create_time=#{createTime}
                     </otherwise>
                  </choose>
          </if>
          <if test="schoolId!=null">
                <choose>
                     <when test="pager!=null and pager.like!=null and pager.like.contains('schoolId')">
                        and T.school_id like concat('%',#{schoolId},'%')
                     </when>
                     <otherwise>
                        and T.school_id=#{schoolId}
                     </otherwise>
                  </choose>
          </if>
          <if test="latticeId!=null">
                <choose>
                     <when test="pager!=null and pager.like!=null and pager.like.contains('latticeId')">
                        and T.lattice_id like concat('%',#{latticeId},'%')
                     </when>
                     <otherwise>
                        and T.lattice_id=#{latticeId}
                     </otherwise>
                  </choose>
          </if>
          <if test="searchTime!=null and searchTime.size() == 2 ">
                   and T.modify_time between #{searchTime[0]} and #{searchTime[1]}
          </if>
          <if test="isRecycle!=null">
                and T.is_recycle=#{isRecycle}
          </if>
            <if test="teacherId!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('teacherId')">
                        and T.teacher_id like concat('%',#{teacherId},'%')
                    </when>
                    <otherwise>
                        and T.teacher_id=#{teacherId}
                    </otherwise>
                </choose>
            </if>
            <if test="schoolYearId!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('schoolYearId')">
                        and T.school_year_id like concat('%',#{schoolYearId},'%')
                    </when>
                    <otherwise>
                        and T.school_year_id=#{schoolYearId}
                    </otherwise>
                </choose>
            </if>
            <if test="fromTo!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('fromTo')">
                        and T.from_to like concat('%',#{fromTo},'%')
                    </when>
                    <otherwise>
                        and T.from_to=#{fromTo}
                    </otherwise>
                </choose>
            </if>
            <if test="term!=null">
                and T.term=#{term}
            </if>

        <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
            <foreach collection="pager.rangeArray" item="item"  index="i">
                <if test="i==0 and item!=null">
                    and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                </if>
                <if test="i==1 and item!=null">
                    and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                </if>
            </foreach>

        </if>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findDmPagerNumberListByCondition" parameterType="DmPagerNumber" resultType="DmPagerNumber">
        select
         <include refid="projection"/>
         from dm_pager_number T
         <where>
            <include refid="match"/>
         </where>
         <include refid="sort"/>
         <include refid="page"/>


    </select>
    <select id="findDmPagerNumberCountByCondition" parameterType="DmPagerNumber" resultType="long">
        select count(*) from dm_pager_number T
        <where>
            <include refid="match"/>
         </where>
    </select>
    <select id="findDmPagerNumberById" resultType="DmPagerNumber">
        select * from dm_pager_number where id=#{id}
    </select>
    <select id="findOneDmPagerNumberByCondition" parameterType="DmPagerNumber" resultType="DmPagerNumber">
        select
         <include refid="projection"/>
         from dm_pager_number T
        <where>
            <include refid="match"/>
         </where>
    </select>
    <insert id="saveDmPagerNumber" parameterType="DmPagerNumber">
        INSERT INTO dm_pager_number (  id,  name,  pager_number,  create_time,  school_id,  lattice_id,  modify_time,  is_recycle,teacher_id,school_year_id,from_to,term )
         values
         (   #{id}  ,   #{name}  ,   #{pagerNumber}  ,  #{createTime}   ,   #{schoolId}  ,   #{latticeId}  ,   #{modifyTime}  ,   #{isRecycle},#{teacherId},#{schoolYearId},#{fromTo},#{term}    )
    </insert>
    <update id="updateDmPagerNumber" parameterType="DmPagerNumber">
        update dm_pager_number
        <set>
                    <if test="name!=null ">
                        name=#{name},
                    </if>
                    <if test="pagerNumber!=null ">
                        pager_number=#{pagerNumber},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime},
                    </if>
                    <if test="schoolId!=null ">
                        school_id=#{schoolId},
                    </if>
                    <if test="latticeId!=null ">
                        lattice_id=#{latticeId},
                    </if>
                    <if test="modifyTime!=null ">
                        modify_time=#{modifyTime},
                    </if>
                    <if test="isRecycle!=null ">
                        is_recycle=#{isRecycle},
                    </if>
                    <if test="teacherId!=null ">
                        teacher_id=#{teacherId},
                    </if>
                    <if test="schoolYearId!=null ">
                        school_year_id=#{schoolYearId},
                    </if>
                    <if test="fromTo!=null ">
                        from_to=#{fromTo},
                    </if>
                    <if test="isRecycle!=null ">
                        term=#{term}
                    </if>
          </set>
         where id=#{id}
    </update>
    <update id="updateDmPagerNumberForAll" parameterType="DmPagerNumber">
        update dm_pager_number
        <set>
                    name=#{name},
                    pager_number=#{pagerNumber},
                    create_time=#{createTime},
                    school_id=#{schoolId},
                    lattice_id=#{latticeId},
                    modify_time=#{modifyTime},
                    is_recycle=#{isRecycle},
                    teacher_id=#{teacherId},
                    school_year_id=#{schoolYearId},
                    from_to=#{fromTo},
                    term=#{term}
          </set>
         where id=#{id}
    </update>
    <delete id="deleteDmPagerNumber" >
        delete from dm_pager_number where id=#{id}
    </delete>
    <delete id="deleteDmPagerNumberByCondition" >
        delete T from dm_pager_number T
        <where>
            <include refid="match"/>
         </where>
    </delete>
    <insert id="batchSaveDmPagerNumber" parameterType="DmPagerNumber">
        INSERT INTO dm_pager_number (  id,  name,  pager_number,  create_time,  school_id,  lattice_id,  modify_time,  is_recycle,teacher_id,school_year_id,from_to,term )
        VALUES
        <foreach collection="list" item="dmPagerNumber" separator=",">
            (   #{dmPagerNumber.id}  ,   #{dmPagerNumber.name}  ,   #{dmPagerNumber.pagerNumber}  ,   now()  ,   #{dmPagerNumber.schoolId}  ,   #{dmPagerNumber.latticeId}  ,   #{dmPagerNumber.modifyTime}  ,   #{dmPagerNumber.isRecycle},   #{dmPagerNumber.teacherId},   #{dmPagerNumber.schoolYearId},   #{dmPagerNumber.fromTo},   #{dmPagerNumber.term}    )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
</mapper>