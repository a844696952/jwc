<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.dm.dao.dmIot.DmIotDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
            <when test="pager!=null and pager.includes!=null">
                <foreach collection="pager.includes" item="field" separator=",">
                    T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                </foreach>
            </when>
            <when test="pager!=null and pager.excludes!=null">
                <trim suffixOverrides=",">
                    <if test="!pager.excludes.contains('id')">
                        T.id,
                    </if>
                    <if test="!pager.excludes.contains('createTime')">
                        T.create_time,
                    </if>
                    <if test="!pager.excludes.contains('updateTime')">
                        T.update_time,
                    </if>
                    <if test="!pager.excludes.contains('rows')">
                        T.rows,
                    </if>
                    <if test="!pager.excludes.contains('ip')">
                        T.ip,
                    </if>
                    <if test="!pager.excludes.contains('port')">
                        T.port,
                    </if>
                    <if test="!pager.excludes.contains('accountNumber')">
                        T.account_number,
                    </if>
                    <if test="!pager.excludes.contains('ordinaryAccount')">
                        T.ordinary_account,
                    </if>
                    <if test="!pager.excludes.contains('token')">
                        T.token,
                    </if>
                    <if test="!pager.excludes.contains('schoolId')">
                        T.school_id,
                    </if>
                </trim>
            </when>
            <otherwise>
                T.*
            </otherwise>
        </choose>
    </sql>
    <sql id="match">
        <if test="id!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('id')">
                    T.id like concat('%',#{id},'%')
                </when>
                <otherwise>
                    T.id=#{id}
                </otherwise>
            </choose>
        </if>
        <if test="createTime!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('createTime')">
                    and T.create_time like concat('%',#{createTime},'%')
                </when>
                <otherwise>
                    and T.create_time=#{createTime}
                </otherwise>
            </choose>
        </if>
        <if test="updateTime!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('updateTime')">
                    and T.update_time like concat('%',#{updateTime},'%')
                </when>
                <otherwise>
                    and T.update_time=#{updateTime}
                </otherwise>
            </choose>
        </if>
        <if test="rows!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('rows')">
                    and T.rows like concat('%',#{rows},'%')
                </when>
                <otherwise>
                    and T.rows=#{rows}
                </otherwise>
            </choose>
        </if>
        <if test="ip!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('ip')">
                    and T.ip like concat('%',#{ip},'%')
                </when>
                <otherwise>
                    and T.ip=#{ip}
                </otherwise>
            </choose>
        </if>
        <if test="port!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('port')">
                    and T.port like concat('%',#{port},'%')
                </when>
                <otherwise>
                    and T.port=#{port}
                </otherwise>
            </choose>
        </if>
        <if test="accountNumber!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('accountNumber')">
                    and T.account_number like concat('%',#{accountNumber},'%')
                </when>
                <otherwise>
                    and T.account_number=#{accountNumber}
                </otherwise>
            </choose>
        </if>
        <if test="ordinaryAccount!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('ordinaryAccount')">
                    and T.ordinary_account like concat('%',#{ordinaryAccount},'%')
                </when>
                <otherwise>
                    and T.ordinary_account=#{ordinaryAccount}
                </otherwise>
            </choose>
        </if>
        <if test="token!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('token')">
                    and T.token like concat('%',#{token},'%')
                </when>
                <otherwise>
                    and T.token=#{token}
                </otherwise>
            </choose>
        </if>
        <if test="schoolId!=null">
            <choose>
                <when test="pager!=null and pager.like!=null and pager.like.contains('schoolId')">
                    and T.school_id like concat('%',#{schoolId},'%')
                </when>
                <otherwise>
                    and T.school_id=#{schoolId}
                </otherwise>
            </choose>
        </if>
        <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
            <foreach collection="pager.rangeArray" item="item"  index="i">
                <if test="i==0 and item!=null">
                    and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                </if>
                <if test="i==1 and item!=null">
                    and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                </if>
            </foreach>

        </if>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findDmIotListByCondition" parameterType="DmIot" resultType="DmIot">
        select
        <include refid="projection"/>
        from dm_iot T
        <where>
            <include refid="match"/>
        </where>
        <include refid="sort"/>
        <include refid="page"/>


    </select>
    <select id="findDmIotCountByCondition" parameterType="DmIot" resultType="long">
        select count(*) from dm_iot T
        <where>
            <include refid="match"/>
        </where>
    </select>
    <select id="findDmIotById" resultType="DmIot">
        select * from dm_iot where id=#{id}
    </select>
    <select id="findOneDmIotByCondition" parameterType="DmIot" resultType="DmIot">
        select
        <include refid="projection"/>
        from dm_iot T
        <where>
            <include refid="match"/>
        </where>
    </select>
    <insert id="saveDmIot" parameterType="DmIot">
        INSERT INTO dm_iot (  id,  create_time,  update_time,  rows,  ip,  port,  account_number,  ordinary_account,  token,  school_id )
         values
         (   #{id}  ,   now()  ,   #{updateTime}  ,   #{rows}  ,   #{ip}  ,   #{port}  ,   #{accountNumber}  ,   #{ordinaryAccount}  ,   #{token}  ,   #{schoolId}    )
    </insert>
    <update id="updateDmIot" parameterType="DmIot">
        update dm_iot
        <set>
            <if test="createTime!=null ">
                create_time=#{createTime},
            </if>
            update_time=now(),
            <if test="rows!=null ">
                rows=#{rows},
            </if>
            <if test="ip!=null ">
                ip=#{ip},
            </if>
            <if test="port!=null ">
                port=#{port},
            </if>
            <if test="accountNumber!=null ">
                account_number=#{accountNumber},
            </if>
            <if test="ordinaryAccount!=null ">
                ordinary_account=#{ordinaryAccount},
            </if>
            <if test="token!=null ">
                token=#{token},
            </if>
            <if test="schoolId!=null ">
                school_id=#{schoolId}
            </if>
        </set>
        where id=#{id}
    </update>
    <update id="updateDmIotForAll" parameterType="DmIot">
        update dm_iot
        <set>
            create_time=#{createTime},
            update_time=now(),
            rows=#{rows},
            ip=#{ip},
            port=#{port},
            account_number=#{accountNumber},
            ordinary_account=#{ordinaryAccount},
            token=#{token},
            school_id=#{schoolId}
        </set>
        where id=#{id}
    </update>
    <delete id="deleteDmIot" >
        delete from dm_iot where id=#{id}
    </delete>
    <delete id="deleteDmIotByCondition" >
        delete T from dm_iot T
        <where>
            <include refid="match"/>
        </where>
    </delete>
    <insert id="batchSaveDmIot" parameterType="DmIot">
        INSERT INTO dm_iot (  id,  create_time,  update_time,  rows,  ip,  port,  account_number,  ordinary_account,  token,  school_id )
        VALUES
        <foreach collection="list" item="dmIot" separator=",">
            (   #{dmIot.id}  ,   now()  ,   #{dmIot.updateTime}  ,   #{dmIot.rows}  ,   #{dmIot.ip}  ,   #{dmIot.port}  ,   #{dmIot.accountNumber}  ,   #{dmIot.ordinaryAccount}  ,   #{dmIot.token}  ,   #{dmIot.schoolId}    )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
</mapper>