<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.dm.dao.studentAspect.IDmStudentAspectDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('studentId')">
                             T.student_id,
                         </if>
                         <if test="!pager.excludes.contains('studentName')">
                             T.student_name,
                         </if>
                         <if test="!pager.excludes.contains('imagePath')">
                             T.image_path,
                         </if>
                         <if test="!pager.excludes.contains('classId')">
                             T.class_id,
                         </if>
                         <if test="!pager.excludes.contains('schoolId')">
                             T.school_id,
                         </if>
                         <if test="!pager.excludes.contains('featurePath')">
                             T.feature_path,
                         </if>
                         <if test="!pager.excludes.contains('operateDate')">
                             T.operate_date,
                         </if>
                         <if test="!pager.excludes.contains('faceId')">
                             T.face_id,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                     T.id=#{id}
              </if>
              <if test="studentId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('studentId')">
                            and T.student_id like concat('%',#{studentId},'%')
                         </when>
                         <otherwise>
                            and T.student_id=#{studentId}
                         </otherwise>
                      </choose>
              </if>
              <if test="studentName!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('studentName')">
                            and T.student_name like concat('%',#{studentName},'%')
                         </when>
                         <otherwise>
                            and T.student_name=#{studentName}
                         </otherwise>
                      </choose>
              </if>
              <if test="imagePath!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('imagePath')">
                            and T.image_path like concat('%',#{imagePath},'%')
                         </when>
                         <otherwise>
                            and T.image_path=#{imagePath}
                         </otherwise>
                      </choose>
              </if>
              <if test="classId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('classId')">
                            and T.class_id like concat('%',#{classId},'%')
                         </when>
                         <otherwise>
                            and T.class_id=#{classId}
                         </otherwise>
                      </choose>
              </if>
              <if test="schoolId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('schoolId')">
                            and T.school_id like concat('%',#{schoolId},'%')
                         </when>
                         <otherwise>
                            and T.school_id=#{schoolId}
                         </otherwise>
                      </choose>
              </if>
              <if test="featurePath!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('featurePath')">
                            and T.feature_path like concat('%',#{featurePath},'%')
                         </when>
                         <otherwise>
                            and T.feature_path=#{featurePath}
                         </otherwise>
                      </choose>
              </if>
              <if test="operateDate!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('operateDate')">
                            and T.operate_date like concat('%',#{operateDate},'%')
                         </when>
                         <otherwise>
                            and T.operate_date=#{operateDate}
                         </otherwise>
                      </choose>
              </if>
              <if test="faceId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('faceId')">
                            and T.face_id like concat('%',#{faceId},'%')
                         </when>
                         <otherwise>
                            and T.face_id=#{faceId}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findDmStudentAspectListByCondition" parameterType="DmStudentAspect" resultType="DmStudentAspect">
        select
         <include refid="projection"/>
         from dm_student_aspect T
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>


    </select>
    <select id="findDmStudentAspectCountByCondition" parameterType="DmStudentAspect" resultType="long">
        select count(*) from dm_student_aspect T
        <include refid="match"/>
    </select>
    <select id="findDmStudentAspectById" resultType="DmStudentAspect">
        select * from dm_student_aspect where id=#{id}
    </select>
    <select id="findOneDmStudentAspectByCondition" parameterType="DmStudentAspect" resultType="DmStudentAspect">
        select
         <include refid="projection"/>
         from dm_student_aspect T
        <include refid="match"/>
    </select>
    <insert id="saveDmStudentAspect" parameterType="DmStudentAspect">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO dm_student_aspect (  id,  student_id,  student_name,  image_path,  class_id,  school_id,  feature_path,  operate_date,  face_id )
         values
         (   #{id}  ,   #{studentId}  ,   #{studentName}  ,   #{imagePath}  ,   #{classId}  ,   #{schoolId}  ,   #{featurePath}  ,   NOW()  ,   #{faceId}    )
    </insert>
    <update id="updateDmStudentAspect" parameterType="DmStudentAspect">
        update dm_student_aspect
        <set>
                    <if test="studentId!=null ">
                        student_id=#{studentId},
                    </if>
                    <if test="studentName!=null ">
                        student_name=#{studentName},
                    </if>
                    <if test="imagePath!=null ">
                        image_path=#{imagePath},
                    </if>
                    <if test="classId!=null ">
                        class_id=#{classId},
                    </if>
                    <if test="schoolId!=null ">
                        school_id=#{schoolId},
                    </if>
                    <if test="featurePath!=null ">
                        feature_path=#{featurePath},
                    </if>
                        operate_date= NOW(),

                    <if test="faceId!=null ">
                        face_id=#{faceId}
                    </if>
          </set>
         where id=#{id}
    </update>
    <update id="updateDmStudentAspectForAll" parameterType="DmStudentAspect">
        update dm_student_aspect
        <set>
                    student_id=#{studentId},
                    student_name=#{studentName},
                    image_path=#{imagePath},
                    class_id=#{classId},
                    school_id=#{schoolId},
                    feature_path=#{featurePath},
                    operate_date= NOW(),
                    face_id=#{faceId}
          </set>
         where id=#{id}
    </update>
    <delete id="deleteDmStudentAspect" >
        delete from dm_student_aspect where id=#{id}
    </delete>
    <delete id="deleteDmStudentAspectByCondition" >
        delete T from dm_student_aspect T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveDmStudentAspect" parameterType="DmStudentAspect">
        INSERT INTO dm_student_aspect (  id,  student_id,  student_name,  image_path,  class_id,  school_id,  feature_path,  operate_date,  face_id )
        VALUES
        <foreach collection="list" item="dmStudentAspect" separator=",">
            (   #{dmStudentAspect.id}  ,   #{dmStudentAspect.studentId}  ,   #{dmStudentAspect.studentName}  ,   #{dmStudentAspect.imagePath}  ,   #{dmStudentAspect.classId}  ,   #{dmStudentAspect.schoolId}  ,   #{dmStudentAspect.featurePath}  ,   NOW()  ,   #{dmStudentAspect.faceId}    )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
</mapper>