<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.xw.dao.dj.partyMemberFile.IXwDjAttachmentFileDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('fileName')">
                             T.file_name,
                         </if>
                         <if test="!pager.excludes.contains('filePath')">
                             T.file_path,
                         </if>
                         <if test="!pager.excludes.contains('fileType')">
                             T.file_type,
                         </if>
                         <if test="!pager.excludes.contains('referenceId')">
                             T.reference_id,
                         </if>
                         <if test="!pager.excludes.contains('fileDesc')">
                             T.file_desc,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='id'">
                             T.id like concat('%',#{id},'%')
                         </when>
                         <otherwise>
                             T.id=#{id}
                         </otherwise>
                      </choose>
              </if>
              <if test="fileName!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='fileName'">
                            and T.file_name like concat('%',#{fileName},'%')
                         </when>
                         <otherwise>
                            and T.file_name=#{fileName}
                         </otherwise>
                      </choose>
              </if>
              <if test="filePath!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='filePath'">
                            and T.file_path like concat('%',#{filePath},'%')
                         </when>
                         <otherwise>
                            and T.file_path=#{filePath}
                         </otherwise>
                      </choose>
              </if>
              <if test="fileType!=null">
                    and T.file_type=#{fileType}
              </if>
              <if test="referenceId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='referenceId'">
                            and T.reference_id like concat('%',#{referenceId},'%')
                         </when>
                         <otherwise>
                            and T.reference_id=#{referenceId}
                         </otherwise>
                      </choose>
              </if>
              <if test="fileDesc!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='fileDesc'">
                            and T.file_desc like concat('%',#{fileDesc},'%')
                         </when>
                         <otherwise>
                            and T.file_desc=#{fileDesc}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findXwDjAttachmentFileListByCondition" parameterType="XwDjAttachmentFile" resultType="XwDjAttachmentFile">
        select
         <include refid="projection"/>
         from xw_dj_attachment_file T
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>


    </select>
    <select id="findXwDjAttachmentFileCountByCondition" parameterType="XwDjAttachmentFile" resultType="long">
        select count(*) from xw_dj_attachment_file T
        <include refid="match"/>
    </select>
    <select id="findXwDjAttachmentFileById" resultType="XwDjAttachmentFile">
        select * from xw_dj_attachment_file where id=#{id}
    </select>
    <select id="findOneXwDjAttachmentFileByCondition" parameterType="XwDjAttachmentFile" resultType="XwDjAttachmentFile">
        select
         <include refid="projection"/>
         from xw_dj_attachment_file T
        <include refid="match"/>
    </select>
    <insert id="saveXwDjAttachmentFile" parameterType="XwDjAttachmentFile">
        insert into xw_dj_attachment_file
         (
            id,
            file_name,
            file_path,
            file_type,
            reference_id,
            file_desc,
            school_id,
            create_time
        ) values
         (
                #{id}
                ,
                #{fileName}
                ,
                #{filePath}
                ,
                #{fileType}
                ,
                #{referenceId}
                ,
                #{fileDesc}
                ,
                #{schoolId}
                ,
                #{createTime}

         )
    </insert>
    <update id="updateXwDjAttachmentFile" parameterType="XwDjAttachmentFile">
        update xw_dj_attachment_file
        <set>
                    <if test="fileName!=null ">
                        file_name=#{fileName},
                    </if>
                    <if test="filePath!=null ">
                        file_path=#{filePath},
                    </if>
                    <if test="fileType!=null ">
                        file_type=#{fileType},
                    </if>
                    <if test="referenceId!=null ">
                        reference_id=#{referenceId},
                    </if>
                    <if test="fileDesc!=null ">
                        file_desc=#{fileDesc}
                    </if>
          </set>
         where id=#{id}
    </update>
    <delete id="deleteXwDjAttachmentFile" >
        delete from xw_dj_attachment_file where id=#{id}
    </delete>
    <delete id="deleteXwDjAttachmentFileByCondition" >
        delete T from xw_dj_attachment_file T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveXwDjAttachmentFile" parameterType="XwDjAttachmentFile">
        INSERT INTO xw_dj_attachment_file (  id,  file_name,  file_path,  file_type,  reference_id,  file_desc , school_id, create_time)
        VALUES
        <foreach collection="list" item="xwDjAttachmentFile" separator=",">
            (  #{xwDjAttachmentFile.id},  #{xwDjAttachmentFile.fileName},  #{xwDjAttachmentFile.filePath},  #{xwDjAttachmentFile.fileType},  #{xwDjAttachmentFile.referenceId},  #{xwDjAttachmentFile.fileDesc} ,#{xwDjAttachmentFile.schoolId}  ,#{xwDjAttachmentFile.createTime} )
        </foreach>
    </insert>
    <delete id="deleteXwDjAttachmentFileByReferenceId" parameterType="string">
        delete from xw_dj_attachment_file where reference_id=#{id}
    </delete>
    <!--##################################################generated code end,do not update######################################################################-->
</mapper>