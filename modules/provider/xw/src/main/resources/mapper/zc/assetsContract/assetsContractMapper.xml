<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.xw.dao.zc.assetsContract.IAssetsContractDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
            <when test="pager!=null and pager.includes!=null">
                <foreach collection="pager.includes" item="field" separator=",">
                    T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                </foreach>
            </when>
            <when test="pager!=null and pager.excludes!=null">
                <trim suffixOverrides=",">
                    <if test="!pager.excludes.contains('id')">
                        T.id,
                    </if>
                    <if test="!pager.excludes.contains('schoolId')">
                        T.school_id,
                    </if>
                    <if test="!pager.excludes.contains('purchaseName')">
                        T.purchase_name,
                    </if>
                    <if test="!pager.excludes.contains('purchaseTime')">
                        T.purchase_time,
                    </if>
                    <if test="!pager.excludes.contains('contractName')">
                        T.contract_name,
                    </if>
                    <if test="!pager.excludes.contains('url')">
                        T.url,
                    </if>
                    <if test="!pager.excludes.contains('createTime')">
                        T.create_time,
                    </if>
                </trim>
            </when>
            <otherwise>
                T.*
            </otherwise>
        </choose>
    </sql>
    <sql id="match">
        <where>
            <if test="id!=null">
                <choose>
                    <when test="pager!=null and pager.like=='id'">
                        T.id like concat('%',#{id},'%')
                    </when>
                    <otherwise>
                        T.id=#{id}
                    </otherwise>
                </choose>
            </if>
            <if test="schoolId!=null">
                <choose>
                    <when test="pager!=null and pager.like=='schoolId'">
                        and T.school_id like concat('%',#{schoolId},'%')
                    </when>
                    <otherwise>
                        and T.school_id=#{schoolId}
                    </otherwise>
                </choose>
            </if>
            <if test="purchaseName!=null">
                <choose>
                    <when test="pager!=null and pager.like=='purchaseName'">
                        and T.purchase_name like concat('%',#{purchaseName},'%')
                    </when>
                    <otherwise>
                        and T.purchase_name=#{purchaseName}
                    </otherwise>
                </choose>
            </if>
            <if test="purchaseTime!=null">
                <choose>
                    <when test="pager!=null and pager.like=='purchaseTime'">
                        and T.purchase_time like concat('%',#{purchaseTime},'%')
                    </when>
                    <otherwise>
                        and T.purchase_time=#{purchaseTime}
                    </otherwise>
                </choose>
            </if>
            <if test="contractName!=null">
                <choose>
                    <when test="pager!=null and pager.like=='contractName'">
                        and T.contract_name like concat('%',#{contractName},'%')
                    </when>
                    <otherwise>
                        and T.contract_name=#{contractName}
                    </otherwise>
                </choose>
            </if>
            <if test="url!=null">
                <choose>
                    <when test="pager!=null and pager.like=='url'">
                        and T.url like concat('%',#{url},'%')
                    </when>
                    <otherwise>
                        and T.url=#{url}
                    </otherwise>
                </choose>
            </if>
            <if test="createTime!=null">
                <choose>
                    <when test="pager!=null and pager.like=='createTime'">
                        and T.create_time like concat('%',#{createTime},'%')
                    </when>
                    <otherwise>
                        and T.create_time=#{createTime}
                    </otherwise>
                </choose>
            </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item" index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findAssetsContractListByCondition" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract"
            resultType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        select
        <include refid="projection"/>
        from xw_assets_contract T
        <include refid="match"/>
        <include refid="sort"/>
        <include refid="page"/>


    </select>
    <select id="findAssetsContractCountByCondition" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract"
            resultType="java.lang.Long">
        select count(*) from xw_assets_contract T
        <include refid="match"/>
    </select>
    <select id="findAssetsContractById" resultType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        select * from xw_assets_contract where id=#{id}
    </select>
    <select id="findOneAssetsContractByCondition" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract"
            resultType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        select
        <include refid="projection"/>
        from xw_assets_contract T
        <include refid="match"/>
    </select>
    <insert id="saveAssetsContract" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        insert into xw_assets_contract
         (
            id,
            school_id,
            purchase_name,
            purchase_time,
            contract_name,
            url,
            create_time
        ) values
         (
                #{id}
                ,
                #{schoolId}
                ,
                #{purchaseName}
                ,
                #{purchaseTime}
                ,
                #{contractName}
                ,
                #{url}
                ,
                DATE_FORMAT(now(),'%Y-%m-%d %H:%i')
         )
    </insert>
    <update id="updateAssetsContract" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        update xw_assets_contract
        <set>
            <if test="schoolId!=null ">
                school_id=#{schoolId},
            </if>
            <if test="purchaseName!=null ">
                purchase_name=#{purchaseName},
            </if>
            <if test="purchaseTime!=null ">
                purchase_time=#{purchaseTime},
            </if>
            <if test="contractName!=null ">
                contract_name=#{contractName},
            </if>
            <if test="url!=null ">
                url=#{url},
            </if>
            <if test="createTime!=null ">
                create_time=#{createTime}
            </if>
        </set>
        where id=#{id}
    </update>
    <delete id="deleteAssetsContract">
        delete from xw_assets_contract where id=#{id}
    </delete>
    <delete id="deleteAssetsContractByCondition">
        delete T from xw_assets_contract T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveAssetsContract" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        INSERT INTO xw_assets_contract ( id, school_id, purchase_name, purchase_time, contract_name, url, create_time )
        VALUES
        <foreach collection="list" item="assetsContract" separator=",">
            ( #{assetsContract.id}, #{assetsContract.schoolId}, #{assetsContract.purchaseName},
            #{assetsContract.purchaseTime}, #{assetsContract.contractName}, #{assetsContract.url},
            #{assetsContract.createTime} )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
    <select id="getFileList" resultType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        select url,contract_name from xw_assets_contract where id in
        <foreach item="item" collection="rowDatas" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <delete id="deleteAssetsContractByIds" parameterType="com.yice.edu.cn.common.pojo.xw.zc.assetsContract.AssetsContract">
        delete from xw_assets_contract where id in
        <foreach item="item" collection="rowDatas" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>