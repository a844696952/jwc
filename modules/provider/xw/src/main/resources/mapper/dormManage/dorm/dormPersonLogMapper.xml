<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.xw.dao.dormManage.dorm.IDormPersonLogDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('personType')">
                             T.person_type,
                         </if>
                         <if test="!pager.excludes.contains('personId')">
                             T.person_id,
                         </if>
                         <if test="!pager.excludes.contains('dormBuildName')">
                             T.dorm_build_name,
                         </if>
                         <if test="!pager.excludes.contains('floor')">
                             T.floor,
                         </if>
                         <if test="!pager.excludes.contains('dormName')">
                             T.dorm_name,
                         </if>
                         <if test="!pager.excludes.contains('bunkName')">
                             T.bunk_name,
                         </if>
                         <if test="!pager.excludes.contains('optime')">
                             T.optime,
                         </if>
                         <if test="!pager.excludes.contains('optType')">
                             T.opt_type,
                         </if>
                         <if test="!pager.excludes.contains('remarks')">
                             T.remarks,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                         <if test="!pager.excludes.contains('updateTime')">
                             T.update_time,
                         </if>
                         <if test="!pager.excludes.contains('schoolId')">
                             T.school_id,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='id'">
                             T.id like concat('%',#{id},'%')
                         </when>
                         <otherwise>
                             T.id=#{id}
                         </otherwise>
                      </choose>
              </if>
              <if test="personType!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='personType'">
                            and T.person_type like concat('%',#{personType},'%')
                         </when>
                         <otherwise>
                            and T.person_type=#{personType}
                         </otherwise>
                      </choose>
              </if>
              <if test="personId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='personId'">
                            and T.person_id like concat('%',#{personId},'%')
                         </when>
                         <otherwise>
                            and T.person_id=#{personId}
                         </otherwise>
                      </choose>
              </if>
              <if test="dormBuildName!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='dormBuildName'">
                            and T.dorm_build_name like concat('%',#{dormBuildName},'%')
                         </when>
                         <otherwise>
                            and T.dorm_build_name=#{dormBuildName}
                         </otherwise>
                      </choose>
              </if>
              <if test="floor!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='floor'">
                            and T.floor like concat('%',#{floor},'%')
                         </when>
                         <otherwise>
                            and T.floor=#{floor}
                         </otherwise>
                      </choose>
              </if>
              <if test="dormName!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='dormName'">
                            and T.dorm_name like concat('%',#{dormName},'%')
                         </when>
                         <otherwise>
                            and T.dorm_name=#{dormName}
                         </otherwise>
                      </choose>
              </if>
              <if test="bunkName!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='bunkName'">
                            and T.bunk_name like concat('%',#{bunkName},'%')
                         </when>
                         <otherwise>
                            and T.bunk_name=#{bunkName}
                         </otherwise>
                      </choose>
              </if>
              <if test="optime!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='optime'">
                            and T.optime like concat('%',#{optime},'%')
                         </when>
                         <otherwise>
                            and T.optime=#{optime}
                         </otherwise>
                      </choose>
              </if>
              <if test="optType!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='optType'">
                            and T.opt_type like concat('%',#{optType},'%')
                         </when>
                         <otherwise>
                            and T.opt_type=#{optType}
                         </otherwise>
                      </choose>
              </if>
              <if test="remarks!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='remarks'">
                            and T.remarks like concat('%',#{remarks},'%')
                         </when>
                         <otherwise>
                            and T.remarks=#{remarks}
                         </otherwise>
                      </choose>
              </if>
              <if test="createTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='createTime'">
                            and T.create_time like concat('%',#{createTime},'%')
                         </when>
                         <otherwise>
                            and T.create_time=#{createTime}
                         </otherwise>
                      </choose>
              </if>
              <if test="updateTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='updateTime'">
                            and T.update_time like concat('%',#{updateTime},'%')
                         </when>
                         <otherwise>
                            and T.update_time=#{updateTime}
                         </otherwise>
                      </choose>
              </if>
              <if test="schoolId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='schoolId'">
                            and T.school_id like concat('%',#{schoolId},'%')
                         </when>
                         <otherwise>
                            and T.school_id=#{schoolId}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findDormPersonLogListByCondition" parameterType="DormPersonLog" resultType="DormPersonLog">
        select
         <include refid="projection"/>
         from xw_dorm_person_log T
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>


    </select>
    <select id="findDormPersonLogCountByCondition" parameterType="DormPersonLog" resultType="long">
        select count(*) from xw_dorm_person_log T
        <include refid="match"/>
    </select>
    <select id="findDormPersonLogById" resultType="DormPersonLog">
        select * from xw_dorm_person_log where id=#{id}
    </select>
    <select id="findOneDormPersonLogByCondition" parameterType="DormPersonLog" resultType="DormPersonLog">
        select
         <include refid="projection"/>
         from xw_dorm_person_log T
        <include refid="match"/>
    </select>
    <insert id="saveDormPersonLog" parameterType="DormPersonLog">
        insert into xw_dorm_person_log
         (
            id,
            person_type,
            person_id,
            dorm_build_name,
            floor,
            dorm_name,
            bunk_name,
            optime,
            opt_type,
            remarks,
            create_time,
            update_time,
            school_id
        ) values
         (
                #{id}
                ,
                #{personType}
                ,
                #{personId}
                ,
                #{dormBuildName}
                ,
                #{floor}
                ,
                #{dormName}
                ,
                #{bunkName}
                ,
                #{optime}
                ,
                #{optType}
                ,
                #{remarks}
                ,
                now()
                ,
                #{updateTime}
                ,
                #{schoolId}
                
         )
    </insert>
    <update id="updateDormPersonLog" parameterType="DormPersonLog">
        update xw_dorm_person_log
        <set>
                    <if test="personType!=null ">
                        person_type=#{personType},
                    </if>
                    <if test="personId!=null ">
                        person_id=#{personId},
                    </if>
                    <if test="dormBuildName!=null ">
                        dorm_build_name=#{dormBuildName},
                    </if>
                    <if test="floor!=null ">
                        floor=#{floor},
                    </if>
                    <if test="dormName!=null ">
                        dorm_name=#{dormName},
                    </if>
                    <if test="bunkName!=null ">
                        bunk_name=#{bunkName},
                    </if>
                    <if test="optime!=null ">
                        optime=#{optime},
                    </if>
                    <if test="optType!=null ">
                        opt_type=#{optType},
                    </if>
                    <if test="remarks!=null ">
                        remarks=#{remarks},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime},
                    </if>
                    update_time=now(),
                    <if test="schoolId!=null ">
                        school_id=#{schoolId}
                    </if>
          </set>
         where id=#{id}
    </update>
    <delete id="deleteDormPersonLog" >
        delete from xw_dorm_person_log where id=#{id}
    </delete>
    <delete id="deleteDormPersonLogByCondition" >
        delete T from xw_dorm_person_log T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveDormPersonLog" parameterType="DormPersonLog">
        INSERT INTO xw_dorm_person_log (  id,  person_type,  person_id,  dorm_build_name,  floor,  dorm_name,  bunk_name,  optime,  opt_type,  remarks,  create_time,  update_time,  school_id )
        VALUES
        <foreach collection="list" item="dormPersonLog" separator=",">
            (  #{dormPersonLog.id},  #{dormPersonLog.personType},  #{dormPersonLog.personId},  #{dormPersonLog.dormBuildName},  #{dormPersonLog.floor},  #{dormPersonLog.dormName},  #{dormPersonLog.bunkName},  #{dormPersonLog.optime},  #{dormPersonLog.optType},  #{dormPersonLog.remarks},  #{dormPersonLog.createTime},  #{dormPersonLog.updateTime},  #{dormPersonLog.schoolId}  )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->


</mapper>