<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yice.edu.cn.jy.dao.titleQuota.IResourcePlatformDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
            <when test="pager!=null and pager.includes!=null">
                <foreach collection="pager.includes" item="field" separator=",">
                    T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                </foreach>
            </when>
            <when test="pager!=null and pager.excludes!=null">
                <trim suffixOverrides=",">
                    <if test="!pager.excludes.contains('id')">
                        T.id,
                    </if>
                    <if test="!pager.excludes.contains('resourceName')">
                        T.resource_name,
                    </if>
                    <if test="!pager.excludes.contains('createTime')">
                        T.create_time,
                    </if>
                    <if test="!pager.excludes.contains('updateTime')">
                        T.update_time,
                    </if>
                </trim>
            </when>
            <otherwise>
                T.*
            </otherwise>
        </choose>
    </sql>
    <sql id="match">
        <where>
            <if test="id!=null">
                T.id=#{id}
            </if>
            <if test="resourceName!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('resourceName')">
                        and T.resource_name like concat('%',#{resourceName},'%')
                    </when>
                    <otherwise>
                        and T.resource_name=#{resourceName}
                    </otherwise>
                </choose>
            </if>
            <if test="createTime!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('createTime')">
                        and T.create_time like concat('%',#{createTime},'%')
                    </when>
                    <otherwise>
                        and T.create_time=#{createTime}
                    </otherwise>
                </choose>
            </if>
            <if test="updateTime!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('updateTime')">
                        and T.update_time like concat('%',#{updateTime},'%')
                    </when>
                    <otherwise>
                        and T.update_time=#{updateTime}
                    </otherwise>
                </choose>
            </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findResourcePlatformListByCondition" parameterType="ResourcePlatform" resultType="ResourcePlatform">
        select
        <include refid="projection"/>
        from jy_resource_platform T
        <include refid="match"/>
        <include refid="sort"/>
        <include refid="page"/>


    </select>
    <select id="findResourcePlatformCountByCondition" parameterType="ResourcePlatform" resultType="long">
        select count(*) from jy_resource_platform T
        <include refid="match"/>
    </select>
    <select id="findResourcePlatformById" resultType="ResourcePlatform">
        select * from jy_resource_platform where id=#{id}
    </select>
    <select id="findOneResourcePlatformByCondition" parameterType="ResourcePlatform" resultType="ResourcePlatform">
        select
        <include refid="projection"/>
        from jy_resource_platform T
        <include refid="match"/>
    </select>
    <insert id="saveResourcePlatform" parameterType="ResourcePlatform">
        INSERT INTO jy_resource_platform (  id,  resource_name,  create_time,  update_time )
         values
         (   #{id}  ,   #{resourceName}  ,   now()  ,   #{updateTime}    )
    </insert>
    <update id="updateResourcePlatform" parameterType="ResourcePlatform">
        update jy_resource_platform
        <set>
            <if test="resourceName!=null ">
                resource_name=#{resourceName},
            </if>
            <if test="createTime!=null ">
                create_time=#{createTime},
            </if>
            update_time=now()
        </set>
        where id=#{id}
    </update>
    <update id="updateResourcePlatformForAll" parameterType="ResourcePlatform">
        update jy_resource_platform
        <set>
            resource_name=#{resourceName},
            create_time=#{createTime},
            remarks=#{remarks},
            update_time=now()
        </set>
        where id=#{id}
    </update>
    <delete id="deleteResourcePlatform" >
        delete from jy_resource_platform where id=#{id}
    </delete>
    <delete id="deleteResourcePlatformByCondition" >
        delete T from jy_resource_platform T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveResourcePlatform" parameterType="ResourcePlatform">
        INSERT INTO jy_resource_platform (  id,  resource_name,  create_time,  update_time )
        VALUES
        <foreach collection="list" item="resourcePlatform" separator=",">
            (   #{resourcePlatform.id}  ,   #{resourcePlatform.resourceName}  ,   now()  ,   #{resourcePlatform.updateTime}    )
        </foreach>
    </insert>
    <!--##################################################generated code end,do not update######################################################################-->
    <select id="findCount" parameterType="ResourcePlatform" resultType="long">
        select count(*) from jy_resource_platform T
        where T.id !=#{id}
        and T.resource_name=#{resourceName}
    </select>
</mapper>